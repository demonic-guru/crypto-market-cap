<?php

namespace AppBundle\Repository;

/**
 * CrytoCurrencyRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CryptoCurrencyRepository extends \Doctrine\ORM\EntityRepository
{

	public function bulkUpdateItems($cryptoId, $image,$name,$symbol, $rank,
									$price,  $priceBtc, $volume24h, $marketCap, $availableSupply, $totalSupply,
									$percentChange1h, $percentChange24h, $percentChange7d, $lastUpdated)
	{
		return $this->createQueryBuilder('crypto_currency')
			->update('AppBundle:CryptoCurrency', 'i')
			//->set('i.cryptoId', ':cryptoId')
			->set('i.image', ':image')
			->set('i.name', ':name')
			->set('i.symbol', ':symbol')
			->set('i.rank', ':rank')
			->set('i.price', ':price')
			->set('i.priceBtc', ':priceBtc')
			->set('i.volume24h', ':volume24h')
			->set('i.marketCap', ':marketCap')
			->set('i.availableSupply', ':availableSupply')
			->set('i.totalSupply', ':totalSupply')
			->set('i.percentChange1h', ':percentChange1h')
			->set('i.percentChange24h', ':percentChange24h')
			->set('i.percentChange7d', ':percentChange7d')
			->set('i.lastUpdated', ':lastUpdated')

			->where('i.cryptoId = :cryptoId')
			->setParameter('cryptoId', $cryptoId)

			->setParameter('image', $image)
			->setParameter('name', $name)
			->setParameter('symbol', $symbol)
			->setParameter('rank', $rank)
			->setParameter('price', $price)
			->setParameter('priceBtc', $priceBtc)
			->setParameter('volume24h', $volume24h)
			->setParameter('marketCap', $marketCap)
			->setParameter('availableSupply', $availableSupply)
			->setParameter('totalSupply', $totalSupply)
			->setParameter('percentChange1h', $percentChange1h)
			->setParameter('percentChange24h', $percentChange24h)
			->setParameter('percentChange7d', $percentChange7d)
			->setParameter('lastUpdated', $lastUpdated)

			->getQuery()
			->execute();

	}

	public function getSearch($search)
	{
		return $this->createQueryBuilder('crypto_currency')
			->andWhere('crypto_currency.name LIKE :searchTerm OR crypto_currency.symbol LIKE :searchTerm' )
			->setParameter('searchTerm','%'. $search.'%')
			->getQuery()
			->execute();
	}


}
